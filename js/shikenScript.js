// === –ó–∞–≥—Ä—É–∂–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–æ–≤ === //
let questionsData = {};

// === –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ === //
let user = { name: "", score: 0 };

// === –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –∏ –æ–±—ä–µ–∫—Ç —Ç–∞–π–º–µ—Ä–∞ === //
let timeLeft = 3000;
let timer;

/**
 * === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã ===
 */
document.getElementById("themeToggle").onclick = () => {
  document.body.classList.toggle("dark");
  document.body.classList.toggle("light");
  document.getElementById("themeToggle").textContent =
    document.body.classList.contains("dark") ? "‚òÄÔ∏è" : "üåô";
};

/**
 * === –°—Ç–∞—Ä—Ç —Ç–µ—Å—Ç–∞ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ ===
 */
async function startTest() {
  const name = document.getElementById("username").value.trim();
  if (!name) return alert("–í–≤–µ–¥–∏—Ç–µ –∏–º—è!");

  user.name = name;

  document.getElementById("user-form").classList.add("hidden");
  document.getElementById("test-section").classList.remove("hidden");

  await loadQuestions();  // –ó–∞–≥—Ä—É–∂–∞–µ–º JSON
  renderAllQuestions();   // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–ª–æ–∫–∏
  startTimer();           // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
}

/**
 * === –ó–∞–≥—Ä—É–∑–∫–∞ JSON —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ ===
 */
async function loadQuestions() {
  const res = await fetch("shikenQuestions.json");
  questionsData = await res.json();
}

/**
 * === –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º ===
 */
function renderAllQuestions() {
  const form = document.getElementById("test-form");
  form.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É

  for (const cls in questionsData) {
    const classData = questionsData[cls];
    const classBlock = document.createElement("div");
    classBlock.className = "class-block";

    // === –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω) === //
    const title = document.createElement("h3");
    title.textContent = classData.title || cls;
    classBlock.appendChild(title);

    // === –§–æ—Ç–æ-–≤–æ–ø—Ä–æ—Å—ã (–æ—Å–æ–±–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞) === //
if (classData.photos) {
  const photoLimit = classData.limit ?? classData.photos.length;

  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–±–ª–æ–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å
  const shuffledPhotos = classData.photos.sort(() => Math.random() - 0.5);

  shuffledPhotos
    .slice(0, photoLimit)
    .forEach((photo, pIdx) => {
      const img = document.createElement("img");
      img.src = photo.image;
      classBlock.appendChild(img);

      photo.questions.forEach((q, qIdx) => {
        const id = `photo-${pIdx}-${qIdx}`;
        const html = `<p>${q.question}</p>` +
          q.options.sort(() => Math.random() - 0.5).map(opt =>
            `<label><input type="radio" name="${id}" value="${opt}" data-answer="${q.answer}" data-points="${classData.points}"> ${opt}</label><br>`
          ).join("");

        const div = document.createElement("div");
        div.innerHTML = html;
        classBlock.appendChild(div);
      });
    });
}

    // === –û–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã === //
    else if (classData.questions) {
      const limit = classData.limit ?? classData.questions.length;

      classData.questions
        .sort(() => Math.random() - 0.5)
        .slice(0, limit)
        .forEach((q, qIdx) => {
          const id = `${cls}-${qIdx}`;
          const html = `<p>${q.question}</p>` +
            q.options.sort(() => Math.random() - 0.5).map(opt =>
              `<label><input type="radio" name="${id}" value="${opt}" data-answer="${q.answer}" data-points="${classData.points}"> ${opt}</label><br>`
            ).join("");

          const div = document.createElement("div");
          div.innerHTML = html;
          classBlock.appendChild(div);
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫ –≤ —Ñ–æ—Ä–º—É
    form.appendChild(classBlock);
  }
}

/**
 * === –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞ ===
 */
function startTimer() {
  const timerElem = document.getElementById("time");
  timer = setInterval(() => {
    const minutes = String(Math.floor(timeLeft / 60)).padStart(2, '0');
    const seconds = String(timeLeft % 60).padStart(2, '0');
    timerElem.textContent = `${minutes}:${seconds}`;

    if (--timeLeft < 0) {
      clearInterval(timer);
      finishTest(); // –í—Ä–µ–º—è –≤—ã—à–ª–æ ‚Äî –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    }
  }, 1000);
}

/**
 * === –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ –≤—Ä—É—á–Ω—É—é –ø–æ –∫–Ω–æ–ø–∫–µ ===
 */
function confirmSubmit() {
  if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç?")) {
    clearInterval(timer);
    finishTest();
  }
}

/**
 * === –í—ã—Ö–æ–¥ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ===
 */
function confirmExit() {
  if (confirm("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é? –í—Å–µ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.")) {
    location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  }
}

/**
 * === –ü–æ–¥—Å—á—ë—Ç –æ—á–∫–æ–≤ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ ===
 */
function finishTest() {
  const inputs = document.querySelectorAll("input[type=radio]:checked");
  let score = 0;

  inputs.forEach(input => {
    const answer = input.dataset.answer;
    const value = input.value;
    const points = parseInt(input.dataset.points);
    if (value === answer) score += points;
  });

  user.score = score;

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  document.getElementById("test-section").classList.add("hidden");
  document.getElementById("result-section").classList.remove("hidden");
  document.getElementById("score-result").textContent =
    `${user.name}, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –±–∞–ª–ª–æ–≤.`;

  saveResult(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
}

/**
 * === –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é (localStorage) ===
 */
function saveResult() {
  const history = JSON.parse(localStorage.getItem("results") || "[]");
  history.push({ name: user.name, score: user.score, date: new Date().toISOString() });
  localStorage.setItem("results", JSON.stringify(history));
}

// === –§–æ—Ç–æ-–≤–æ–ø—Ä–æ—Å—ã (–æ—Å–æ–±–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞) === //